name: CI/CD with Docker Compose and NCP

on:
  push:
    branches: ["main"]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout source code
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Set up JDK
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "adopt"

      # 3. Make gradlew executable
      - name: Make gradlew executable
        run: chmod +x be/gradlew

      # 4. (Optional) Gradle build (if Dockerfile needs pre-built JAR)
      - name: Gradle Build
        working-directory: be
        run: ./gradlew bootJar -x test

      # 5. Build Docker image with Docker Compose (using docker compose v2)
      - name: Docker Compose Build
        run: docker compose -f docker-compose.yml build

      # 6. Docker Hub login
      - name: Docker Hub Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 7. Push Docker image to Docker Hub
      - name: Docker Compose Push
        run: docker compose -f docker-compose.yml push

      # 8. SSH into NCP VM and deploy
      - name: SSH into NCP VM and deploy
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.NCP_VM_EXTERNAL_IP }}
          username: ${{ secrets.NCP_VM_USERNAME }}
          password: ${{ secrets.NCP_VM_PASSWORD }}
          port: 22
          timeout: 60s
          script: |
            docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
            docker stop async-be || true
            docker rm async-be || true
            docker rmi hyunul/async-be || true
            docker pull hyunul/async-be
            docker run -it -d -p 8080:8080 --name async-be hyunul/async-be
